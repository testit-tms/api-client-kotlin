/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.AutoTestStepModel
import ru.testit.kotlin.client.models.ConfigurationShortModel
import ru.testit.kotlin.client.models.LabelShortModel
import ru.testit.kotlin.client.models.LinkPutModel
import ru.testit.kotlin.client.models.TestStatusModel

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param globalId Global ID of the autotest
 * @param isDeleted Indicates if the autotest is deleted
 * @param mustBeApproved Indicates if the autotest has unapproved changes from linked work items
 * @param id Unique ID of the autotest
 * @param createdDate Creation date of the autotest
 * @param createdById Unique ID of the project creator
 * @param externalId External ID of the autotest
 * @param projectId Unique ID of the autotest project
 * @param name Name of the autotest
 * @param modifiedDate Last modification date of the project
 * @param modifiedById Unique ID of the project last editor
 * @param lastTestRunId Unique ID of the autotest last test run
 * @param lastTestRunName Name of the autotest last test run
 * @param lastTestResultId Unique ID of the autotest last test result
 * @param lastTestResultConfiguration Configuration of the autotest last test result
 * @param lastTestResultOutcome Outcome of the autotest last test result
 * @param lastTestResultStatus Status of the autotest last test result
 * @param stabilityPercentage Stability percentage of the autotest
 * @param links Collection of the autotest links
 * @param namespace Name of the autotest namespace
 * @param classname Name of the autotest class
 * @param steps Collection of the autotest steps
 * @param setup Collection of the autotest setup steps
 * @param teardown Collection of the autotest teardown steps
 * @param title Name of the autotest in autotest's card
 * @param description Description of the autotest in autotest's card
 * @param labels Collection of the autotest labels
 * @param isFlaky Indicates if the autotest is marked as flaky
 * @param externalKey External key of the autotest
 */


data class AutoTestModel (

    /* Global ID of the autotest */
    @Json(name = "globalId")
    val globalId: kotlin.Long,

    /* Indicates if the autotest is deleted */
    @Json(name = "isDeleted")
    val isDeleted: kotlin.Boolean,

    /* Indicates if the autotest has unapproved changes from linked work items */
    @Json(name = "mustBeApproved")
    val mustBeApproved: kotlin.Boolean,

    /* Unique ID of the autotest */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Creation date of the autotest */
    @Json(name = "createdDate")
    val createdDate: java.time.OffsetDateTime,

    /* Unique ID of the project creator */
    @Json(name = "createdById")
    val createdById: java.util.UUID,

    /* External ID of the autotest */
    @Json(name = "externalId")
    val externalId: kotlin.String,

    /* Unique ID of the autotest project */
    @Json(name = "projectId")
    val projectId: java.util.UUID,

    /* Name of the autotest */
    @Json(name = "name")
    val name: kotlin.String,

    /* Last modification date of the project */
    @Json(name = "modifiedDate")
    val modifiedDate: java.time.OffsetDateTime? = null,

    /* Unique ID of the project last editor */
    @Json(name = "modifiedById")
    val modifiedById: java.util.UUID? = null,

    /* Unique ID of the autotest last test run */
    @Json(name = "lastTestRunId")
    val lastTestRunId: java.util.UUID? = null,

    /* Name of the autotest last test run */
    @Json(name = "lastTestRunName")
    val lastTestRunName: kotlin.String? = null,

    /* Unique ID of the autotest last test result */
    @Json(name = "lastTestResultId")
    val lastTestResultId: java.util.UUID? = null,

    /* Configuration of the autotest last test result */
    @Json(name = "lastTestResultConfiguration")
    val lastTestResultConfiguration: ConfigurationShortModel? = null,

    /* Outcome of the autotest last test result */
    @Json(name = "lastTestResultOutcome")
    @Deprecated(message = "This property is deprecated.")
    val lastTestResultOutcome: kotlin.String? = null,

    /* Status of the autotest last test result */
    @Json(name = "lastTestResultStatus")
    val lastTestResultStatus: TestStatusModel? = null,

    /* Stability percentage of the autotest */
    @Json(name = "stabilityPercentage")
    val stabilityPercentage: kotlin.Int? = null,

    /* Collection of the autotest links */
    @Json(name = "links")
    val links: kotlin.collections.List<LinkPutModel>? = null,

    /* Name of the autotest namespace */
    @Json(name = "namespace")
    val namespace: kotlin.String? = null,

    /* Name of the autotest class */
    @Json(name = "classname")
    val classname: kotlin.String? = null,

    /* Collection of the autotest steps */
    @Json(name = "steps")
    val steps: kotlin.collections.List<AutoTestStepModel>? = null,

    /* Collection of the autotest setup steps */
    @Json(name = "setup")
    val setup: kotlin.collections.List<AutoTestStepModel>? = null,

    /* Collection of the autotest teardown steps */
    @Json(name = "teardown")
    val teardown: kotlin.collections.List<AutoTestStepModel>? = null,

    /* Name of the autotest in autotest's card */
    @Json(name = "title")
    val title: kotlin.String? = null,

    /* Description of the autotest in autotest's card */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Collection of the autotest labels */
    @Json(name = "labels")
    val labels: kotlin.collections.List<LabelShortModel>? = null,

    /* Indicates if the autotest is marked as flaky */
    @Json(name = "isFlaky")
    val isFlaky: kotlin.Boolean? = null,

    /* External key of the autotest */
    @Json(name = "externalKey")
    val externalKey: kotlin.String? = null

) {


}

