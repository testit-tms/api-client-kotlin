/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.TagApiModel

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id Test plan unique internal identifier
 * @param name Test plan name
 * @param projectId Project unique identifier
 * @param lockedById User who locked test plan modification internal identifier
 * @param startDate Date and time of test plan start
 * @param endDate Date and time of test plan end
 * @param description Test plan description
 * @param build Build of the application on which test plan is executed
 * @param productName Name of the testing product
 * @param hasAutomaticDurationTimer Boolean flag defines if test plan has automatic duration timer
 * @param attributes Key value pair of test plan custom attributes
 * @param tags Test plan tag names collection
 */


data class UpdateTestPlanApiModel (

    /* Test plan unique internal identifier */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Test plan name */
    @Json(name = "name")
    val name: kotlin.String,

    /* Project unique identifier */
    @Json(name = "projectId")
    val projectId: java.util.UUID,

    /* User who locked test plan modification internal identifier */
    @Json(name = "lockedById")
    val lockedById: java.util.UUID? = null,

    /* Date and time of test plan start */
    @Json(name = "startDate")
    val startDate: java.time.OffsetDateTime? = null,

    /* Date and time of test plan end */
    @Json(name = "endDate")
    val endDate: java.time.OffsetDateTime? = null,

    /* Test plan description */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Build of the application on which test plan is executed */
    @Json(name = "build")
    val build: kotlin.String? = null,

    /* Name of the testing product */
    @Json(name = "productName")
    val productName: kotlin.String? = null,

    /* Boolean flag defines if test plan has automatic duration timer */
    @Json(name = "hasAutomaticDurationTimer")
    val hasAutomaticDurationTimer: kotlin.Boolean? = null,

    /* Key value pair of test plan custom attributes */
    @Json(name = "attributes")
    val attributes: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Test plan tag names collection */
    @Json(name = "tags")
    val tags: kotlin.collections.List<TagApiModel>? = null

) {


}

