/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.AuditApiResult
import ru.testit.kotlin.client.models.ConfigurationShortApiResult
import ru.testit.kotlin.client.models.LastTestResultApiResult
import ru.testit.kotlin.client.models.ParameterShortApiResult
import ru.testit.kotlin.client.models.TestPlanTestPointsTestSuiteSearchApiResult
import ru.testit.kotlin.client.models.TestPlanTestPointsWorkItemSearchApiResult
import ru.testit.kotlin.client.models.TestStatusShortApiResult
import ru.testit.kotlin.client.models.UserNameApiResult

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param created 
 * @param status 
 * @param statusModel 
 * @param inProgress 
 * @param configuration 
 * @param testSuite 
 * @param workItem 
 * @param parameters 
 * @param modified 
 * @param tester 
 * @param lastTestResult 
 */


data class TestPlanTestPointsSearchApiResult (

    @Json(name = "id")
    val id: java.util.UUID,

    @Json(name = "created")
    val created: AuditApiResult,

    @Json(name = "status")
    @Deprecated(message = "This property is deprecated.")
    val status: kotlin.String,

    @Json(name = "statusModel")
    val statusModel: TestStatusShortApiResult,

    @Json(name = "inProgress")
    val inProgress: kotlin.Boolean,

    @Json(name = "configuration")
    val configuration: ConfigurationShortApiResult,

    @Json(name = "testSuite")
    val testSuite: TestPlanTestPointsTestSuiteSearchApiResult,

    @Json(name = "workItem")
    val workItem: TestPlanTestPointsWorkItemSearchApiResult,

    @Json(name = "parameters")
    val parameters: kotlin.collections.List<ParameterShortApiResult>,

    @Json(name = "modified")
    val modified: AuditApiResult? = null,

    @Json(name = "tester")
    val tester: UserNameApiResult? = null,

    @Json(name = "lastTestResult")
    val lastTestResult: LastTestResultApiResult? = null

) {


}

