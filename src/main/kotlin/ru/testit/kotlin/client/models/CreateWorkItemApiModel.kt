/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.AssignAttachmentApiModel
import ru.testit.kotlin.client.models.AssignIterationApiModel
import ru.testit.kotlin.client.models.AutoTestIdModel
import ru.testit.kotlin.client.models.CreateLinkApiModel
import ru.testit.kotlin.client.models.CreateStepApiModel
import ru.testit.kotlin.client.models.TagModel
import ru.testit.kotlin.client.models.WorkItemEntityTypeApiModel
import ru.testit.kotlin.client.models.WorkItemPriorityApiModel
import ru.testit.kotlin.client.models.WorkItemStateApiModel

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param projectId Unique identifier of the project
 * @param name Name of the work item
 * @param entityTypeName Type of entity associated with this work item
 * @param duration Duration of the work item in milliseconds
 * @param state State of the work item
 * @param priority Priority level of the work item
 * @param attributes Set of custom attributes associated with the work item
 * @param tags Set of tags applied to the work item
 * @param preconditionSteps Set of precondition steps that need to be executed before starting the main steps
 * @param steps Main steps or actions defined for the work item
 * @param postconditionSteps Set of postcondition steps that are executed after completing the main steps
 * @param links Set of links related to the work item
 * @param sectionId Unique identifier of the section within a project
 * @param description Description of the work item
 * @param iterations Associated iterations linked to the work item
 * @param autoTests Automated tests associated with the work item
 * @param attachments Files attached to the work item
 */


data class CreateWorkItemApiModel (

    /* Unique identifier of the project */
    @Json(name = "projectId")
    val projectId: java.util.UUID,

    /* Name of the work item */
    @Json(name = "name")
    val name: kotlin.String,

    /* Type of entity associated with this work item */
    @Json(name = "entityTypeName")
    val entityTypeName: WorkItemEntityTypeApiModel,

    /* Duration of the work item in milliseconds */
    @Json(name = "duration")
    val duration: kotlin.Int,

    /* State of the work item */
    @Json(name = "state")
    val state: WorkItemStateApiModel,

    /* Priority level of the work item */
    @Json(name = "priority")
    val priority: WorkItemPriorityApiModel,

    /* Set of custom attributes associated with the work item */
    @Json(name = "attributes")
    val attributes: kotlin.collections.Map<kotlin.String, kotlin.Any>,

    /* Set of tags applied to the work item */
    @Json(name = "tags")
    val tags: kotlin.collections.List<TagModel>,

    /* Set of precondition steps that need to be executed before starting the main steps */
    @Json(name = "preconditionSteps")
    val preconditionSteps: kotlin.collections.List<CreateStepApiModel>,

    /* Main steps or actions defined for the work item */
    @Json(name = "steps")
    val steps: kotlin.collections.List<CreateStepApiModel>,

    /* Set of postcondition steps that are executed after completing the main steps */
    @Json(name = "postconditionSteps")
    val postconditionSteps: kotlin.collections.List<CreateStepApiModel>,

    /* Set of links related to the work item */
    @Json(name = "links")
    val links: kotlin.collections.List<CreateLinkApiModel>,

    /* Unique identifier of the section within a project */
    @Json(name = "sectionId")
    val sectionId: java.util.UUID? = null,

    /* Description of the work item */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Associated iterations linked to the work item */
    @Json(name = "iterations")
    val iterations: kotlin.collections.List<AssignIterationApiModel>? = null,

    /* Automated tests associated with the work item */
    @Json(name = "autoTests")
    val autoTests: kotlin.collections.List<AutoTestIdModel>? = null,

    /* Files attached to the work item */
    @Json(name = "attachments")
    val attachments: kotlin.collections.List<AssignAttachmentApiModel>? = null

) {


}

