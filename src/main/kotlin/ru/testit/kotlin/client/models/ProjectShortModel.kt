/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.ProjectTypeModel

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id Unique ID of the project
 * @param name Name of the project
 * @param isFavorite Indicates if the project is marked as favorite
 * @param isDeleted Indicates if the project is deleted
 * @param createdDate Creation date of the project
 * @param createdById Unique ID of the project creator
 * @param globalId Global ID of the project
 * @param type Type of the project
 * @param isFlakyAuto Indicates if the status \"Flaky/Stable\" sets automatically
 * @param workflowId 
 * @param description Description of the project
 * @param testCasesCount Number of test cases in the project
 * @param sharedStepsCount Number of shared steps in the project
 * @param checkListsCount Number of checklists in the project
 * @param autoTestsCount Number of autotests in the project
 * @param modifiedDate Last modification date of the project
 * @param modifiedById Unique ID of the project last editor
 */


data class ProjectShortModel (

    /* Unique ID of the project */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Name of the project */
    @Json(name = "name")
    val name: kotlin.String,

    /* Indicates if the project is marked as favorite */
    @Json(name = "isFavorite")
    val isFavorite: kotlin.Boolean,

    /* Indicates if the project is deleted */
    @Json(name = "isDeleted")
    val isDeleted: kotlin.Boolean,

    /* Creation date of the project */
    @Json(name = "createdDate")
    val createdDate: java.time.OffsetDateTime,

    /* Unique ID of the project creator */
    @Json(name = "createdById")
    val createdById: java.util.UUID,

    /* Global ID of the project */
    @Json(name = "globalId")
    val globalId: kotlin.Long,

    /* Type of the project */
    @Json(name = "type")
    val type: ProjectTypeModel,

    /* Indicates if the status \"Flaky/Stable\" sets automatically */
    @Json(name = "isFlakyAuto")
    @Deprecated(message = "This property is deprecated.")
    val isFlakyAuto: kotlin.Boolean,

    @Json(name = "workflowId")
    val workflowId: java.util.UUID,

    /* Description of the project */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Number of test cases in the project */
    @Json(name = "testCasesCount")
    val testCasesCount: kotlin.Int? = null,

    /* Number of shared steps in the project */
    @Json(name = "sharedStepsCount")
    val sharedStepsCount: kotlin.Int? = null,

    /* Number of checklists in the project */
    @Json(name = "checkListsCount")
    val checkListsCount: kotlin.Int? = null,

    /* Number of autotests in the project */
    @Json(name = "autoTestsCount")
    val autoTestsCount: kotlin.Int? = null,

    /* Last modification date of the project */
    @Json(name = "modifiedDate")
    val modifiedDate: java.time.OffsetDateTime? = null,

    /* Unique ID of the project last editor */
    @Json(name = "modifiedById")
    val modifiedById: java.util.UUID? = null

) {


}

