/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.AutoTestModel
import ru.testit.kotlin.client.models.TestPlanModel
import ru.testit.kotlin.client.models.TestResultModel
import ru.testit.kotlin.client.models.TestRunAnalyticResultModel
import ru.testit.kotlin.client.models.TestRunState

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param autoTestsCount 
 * @param isAutomated 
 * @param analytic 
 * @param createdDate 
 * @param createdById 
 * @param build 
 * @param description 
 * @param stateName 
 * @param projectId 
 * @param name 
 * @param launchSource 
 * @param id Unique ID of the entity
 * @param isDeleted Indicates if the entity is deleted
 * @param autoTests 
 * @param testSuiteIds 
 * @param testResults 
 * @param testPlan 
 * @param modifiedDate 
 * @param modifiedById 
 * @param createdByUserName 
 * @param startedDate 
 * @param completedDate 
 * @param testPlanId 
 * @param runByUserId 
 * @param stoppedByUserId 
 */


data class TestRunModel (

    @Json(name = "autoTestsCount")
    val autoTestsCount: kotlin.Int,

    @Json(name = "isAutomated")
    val isAutomated: kotlin.Boolean,

    @Json(name = "analytic")
    val analytic: TestRunAnalyticResultModel,

    @Json(name = "createdDate")
    val createdDate: java.time.OffsetDateTime,

    @Json(name = "createdById")
    val createdById: java.util.UUID,

    @Json(name = "build")
    val build: kotlin.String,

    @Json(name = "description")
    val description: kotlin.String,

    @Json(name = "stateName")
    val stateName: TestRunState,

    @Json(name = "projectId")
    val projectId: java.util.UUID,

    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "launchSource")
    val launchSource: kotlin.String,

    /* Unique ID of the entity */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Indicates if the entity is deleted */
    @Json(name = "isDeleted")
    val isDeleted: kotlin.Boolean,

    @Json(name = "autoTests")
    val autoTests: kotlin.collections.List<AutoTestModel>? = null,

    @Json(name = "testSuiteIds")
    val testSuiteIds: kotlin.collections.List<java.util.UUID>? = null,

    @Json(name = "testResults")
    val testResults: kotlin.collections.List<TestResultModel>? = null,

    @Json(name = "testPlan")
    val testPlan: TestPlanModel? = null,

    @Json(name = "modifiedDate")
    val modifiedDate: java.time.OffsetDateTime? = null,

    @Json(name = "modifiedById")
    val modifiedById: java.util.UUID? = null,

    @Json(name = "createdByUserName")
    val createdByUserName: kotlin.String? = null,

    @Json(name = "startedDate")
    val startedDate: java.time.OffsetDateTime? = null,

    @Json(name = "completedDate")
    val completedDate: java.time.OffsetDateTime? = null,

    @Json(name = "testPlanId")
    val testPlanId: java.util.UUID? = null,

    @Json(name = "runByUserId")
    val runByUserId: java.util.UUID? = null,

    @Json(name = "stoppedByUserId")
    val stoppedByUserId: java.util.UUID? = null

) {


}

