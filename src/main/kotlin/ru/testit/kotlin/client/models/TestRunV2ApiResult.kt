/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.AttachmentApiResult
import ru.testit.kotlin.client.models.LinkApiResult
import ru.testit.kotlin.client.models.NamedEntityApiModel
import ru.testit.kotlin.client.models.TestResultV2GetModel
import ru.testit.kotlin.client.models.TestRunState
import ru.testit.kotlin.client.models.TestStatusApiResult

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id Test run unique identifier
 * @param name Test run name
 * @param stateName Test run state
 * @param status Test run status
 * @param projectId Project unique identifier              This property is used to link test run with project.
 * @param createdDate Date and time of test run creation
 * @param createdById Unique identifier of user who created test run
 * @param attachments Collection of attachments related to the test run
 * @param links Collection of links related to the test run
 * @param webhooks Enabled webhooks
 * @param runCount Run count
 * @param description Test run description
 * @param launchSource Test run launch source              Once launch source is specified it cannot be updated.
 * @param startedOn Date and time of test run start
 * @param completedOn Date and time of test run end
 * @param testPlanId Test plan unique identifier              This property is used to link test run with test plan.
 * @param testResults Enumeration of test results related to test run
 * @param modifiedDate Date and time of last test run  modification
 * @param modifiedById Unique identifier of user who applied last test run  modification
 * @param createdByUserName Username of user who created test run
 * @param customParameters Customers test run parameters
 */


data class TestRunV2ApiResult (

    /* Test run unique identifier */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Test run name */
    @Json(name = "name")
    val name: kotlin.String,

    /* Test run state */
    @Json(name = "stateName")
    @Deprecated(message = "This property is deprecated.")
    val stateName: TestRunState,

    /* Test run status */
    @Json(name = "status")
    val status: TestStatusApiResult,

    /* Project unique identifier              This property is used to link test run with project. */
    @Json(name = "projectId")
    val projectId: java.util.UUID,

    /* Date and time of test run creation */
    @Json(name = "createdDate")
    val createdDate: java.time.OffsetDateTime,

    /* Unique identifier of user who created test run */
    @Json(name = "createdById")
    val createdById: java.util.UUID,

    /* Collection of attachments related to the test run */
    @Json(name = "attachments")
    val attachments: kotlin.collections.List<AttachmentApiResult>,

    /* Collection of links related to the test run */
    @Json(name = "links")
    val links: kotlin.collections.List<LinkApiResult>,

    /* Enabled webhooks */
    @Json(name = "webhooks")
    val webhooks: kotlin.collections.List<NamedEntityApiModel>,

    /* Run count */
    @Json(name = "runCount")
    val runCount: kotlin.Int,

    /* Test run description */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Test run launch source              Once launch source is specified it cannot be updated. */
    @Json(name = "launchSource")
    val launchSource: kotlin.String? = null,

    /* Date and time of test run start */
    @Json(name = "startedOn")
    val startedOn: java.time.OffsetDateTime? = null,

    /* Date and time of test run end */
    @Json(name = "completedOn")
    val completedOn: java.time.OffsetDateTime? = null,

    /* Test plan unique identifier              This property is used to link test run with test plan. */
    @Json(name = "testPlanId")
    val testPlanId: java.util.UUID? = null,

    /* Enumeration of test results related to test run */
    @Json(name = "testResults")
    val testResults: kotlin.collections.List<TestResultV2GetModel>? = null,

    /* Date and time of last test run  modification */
    @Json(name = "modifiedDate")
    val modifiedDate: java.time.OffsetDateTime? = null,

    /* Unique identifier of user who applied last test run  modification */
    @Json(name = "modifiedById")
    val modifiedById: java.util.UUID? = null,

    /* Username of user who created test run */
    @Json(name = "createdByUserName")
    val createdByUserName: kotlin.String? = null,

    /* Customers test run parameters */
    @Json(name = "customParameters")
    val customParameters: kotlin.collections.Map<kotlin.String, kotlin.String>? = null

) {


}

