/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import ru.testit.kotlin.client.models.TestStatusApiResult

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id Test point unique internal identifier
 * @param statusModel Test point status
 * @param iterationId Iteration unique identifier
 * @param testSuiteId Test suite to which test point relates unique identifier
 * @param testerId Tester who is responded for the test unique internal identifier
 * @param workItemId Workitem to which test point relates unique identifier
 * @param configurationId Configuration to which test point relates unique identifier
 * @param status Test point status   Applies one of these values: Blocked, NoResults, Failed, Passed
 * @param lastTestResultId Last test result unique identifier
 * @param workItemMedianDuration Median duration of work item the test point represents
 */


data class TestPointShortApiResult (

    /* Test point unique internal identifier */
    @Json(name = "id")
    val id: java.util.UUID,

    /* Test point status */
    @Json(name = "statusModel")
    val statusModel: TestStatusApiResult,

    /* Iteration unique identifier */
    @Json(name = "iterationId")
    val iterationId: java.util.UUID,

    /* Test suite to which test point relates unique identifier */
    @Json(name = "testSuiteId")
    val testSuiteId: java.util.UUID,

    /* Tester who is responded for the test unique internal identifier */
    @Json(name = "testerId")
    val testerId: java.util.UUID? = null,

    /* Workitem to which test point relates unique identifier */
    @Json(name = "workItemId")
    val workItemId: java.util.UUID? = null,

    /* Configuration to which test point relates unique identifier */
    @Json(name = "configurationId")
    val configurationId: java.util.UUID? = null,

    /* Test point status   Applies one of these values: Blocked, NoResults, Failed, Passed */
    @Json(name = "status")
    @Deprecated(message = "This property is deprecated.")
    val status: kotlin.String? = null,

    /* Last test result unique identifier */
    @Json(name = "lastTestResultId")
    val lastTestResultId: java.util.UUID? = null,

    /* Median duration of work item the test point represents */
    @Json(name = "workItemMedianDuration")
    val workItemMedianDuration: kotlin.Long? = null

) {


}

