/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.AttachmentModel
import org.openapitools.client.models.AutoTestModelV2GetModel
import org.openapitools.client.models.ConfigurationModel
import org.openapitools.client.models.LinkModel
import org.openapitools.client.models.TestPointShortModel

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id 
 * @param configurationId 
 * @param workItemVersionId 
 * @param testRunId 
 * @param outcome Property can contain one of these values: Passed, Failed, InProgress, Blocked, Skipped
 * @param configuration 
 * @param autoTest 
 * @param autoTestId 
 * @param message 
 * @param traces 
 * @param startedOn 
 * @param completedOn 
 * @param runByUserId 
 * @param stoppedByUserId 
 * @param testPointId 
 * @param testPoint 
 * @param comment 
 * @param links 
 * @param attachments 
 * @param parameters 
 * @param properties 
 */


data class TestResultV2GetModel (

    @Json(name = "id")
    val id: java.util.UUID,

    @Json(name = "configurationId")
    val configurationId: java.util.UUID,

    @Json(name = "workItemVersionId")
    val workItemVersionId: java.util.UUID,

    @Json(name = "testRunId")
    val testRunId: java.util.UUID,

    /* Property can contain one of these values: Passed, Failed, InProgress, Blocked, Skipped */
    @Json(name = "outcome")
    val outcome: kotlin.String,

    @Json(name = "configuration")
    val configuration: ConfigurationModel? = null,

    @Json(name = "autoTest")
    val autoTest: AutoTestModelV2GetModel? = null,

    @Json(name = "autoTestId")
    val autoTestId: java.util.UUID? = null,

    @Json(name = "message")
    val message: kotlin.String? = null,

    @Json(name = "traces")
    val traces: kotlin.String? = null,

    @Json(name = "startedOn")
    val startedOn: java.time.OffsetDateTime? = null,

    @Json(name = "completedOn")
    val completedOn: java.time.OffsetDateTime? = null,

    @Json(name = "runByUserId")
    val runByUserId: java.util.UUID? = null,

    @Json(name = "stoppedByUserId")
    val stoppedByUserId: java.util.UUID? = null,

    @Json(name = "testPointId")
    val testPointId: java.util.UUID? = null,

    @Json(name = "testPoint")
    val testPoint: TestPointShortModel? = null,

    @Json(name = "comment")
    val comment: kotlin.String? = null,

    @Json(name = "links")
    val links: kotlin.collections.List<LinkModel>? = null,

    @Json(name = "attachments")
    val attachments: kotlin.collections.List<AttachmentModel>? = null,

    @Json(name = "parameters")
    val parameters: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    @Json(name = "properties")
    val properties: kotlin.collections.Map<kotlin.String, kotlin.String>? = null

) {


}

