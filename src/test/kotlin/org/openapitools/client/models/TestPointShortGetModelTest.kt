/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.TestPointShortGetModel
import org.openapitools.client.models.LastTestResultModel
import org.openapitools.client.models.TestPointStatus
import org.openapitools.client.models.WorkItemPriorityModel
import org.openapitools.client.models.WorkItemState

class TestPointShortGetModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestPointShortGetModel
        //val modelInstance = TestPointShortGetModel()

        // to test the property `id` - Unique ID of the test point
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `createdDate` - Creation date of the test point
        should("test createdDate") {
            // uncomment below to test the property
            //modelInstance.createdDate shouldBe ("TODO")
        }

        // to test the property `createdById` - Unique ID of the test point creator
        should("test createdById") {
            // uncomment below to test the property
            //modelInstance.createdById shouldBe ("TODO")
        }

        // to test the property `attributes` - Collection of attributes of work item the test point represents
        should("test attributes") {
            // uncomment below to test the property
            //modelInstance.attributes shouldBe ("TODO")
        }

        // to test the property `tags` - Collection of the test point tags
        should("test tags") {
            // uncomment below to test the property
            //modelInstance.tags shouldBe ("TODO")
        }

        // to test the property `links` - Collection of the test point links
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

        // to test the property `testSuiteId` - Unique ID of test suite the test point assigned to
        should("test testSuiteId") {
            // uncomment below to test the property
            //modelInstance.testSuiteId shouldBe ("TODO")
        }

        // to test the property `testSuiteName` - Name of the test suite
        should("test testSuiteName") {
            // uncomment below to test the property
            //modelInstance.testSuiteName shouldBe ("TODO")
        }

        // to test the property `workItemId` - Unique ID of work item the test point represents
        should("test workItemId") {
            // uncomment below to test the property
            //modelInstance.workItemId shouldBe ("TODO")
        }

        // to test the property `workItemGlobalId` - Global ID of work item the test point represents
        should("test workItemGlobalId") {
            // uncomment below to test the property
            //modelInstance.workItemGlobalId shouldBe ("TODO")
        }

        // to test the property `workItemVersionId` - Unique ID of work item version the test point represents
        should("test workItemVersionId") {
            // uncomment below to test the property
            //modelInstance.workItemVersionId shouldBe ("TODO")
        }

        // to test the property `workItemVersionNumber` - Number of work item version the test point represents
        should("test workItemVersionNumber") {
            // uncomment below to test the property
            //modelInstance.workItemVersionNumber shouldBe ("TODO")
        }

        // to test the property `status` - Status of the test point
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `priority` - Priority of the test point
        should("test priority") {
            // uncomment below to test the property
            //modelInstance.priority shouldBe ("TODO")
        }

        // to test the property `isAutomated` - Indicates if the test point represents an autotest
        should("test isAutomated") {
            // uncomment below to test the property
            //modelInstance.isAutomated shouldBe ("TODO")
        }

        // to test the property `name` - Name of the test point
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `configurationId` - Unique ID of the test point configuration
        should("test configurationId") {
            // uncomment below to test the property
            //modelInstance.configurationId shouldBe ("TODO")
        }

        // to test the property `duration` - Duration of the test point
        should("test duration") {
            // uncomment below to test the property
            //modelInstance.duration shouldBe ("TODO")
        }

        // to test the property `sectionId` - Unique ID of section where work item the test point represents is located
        should("test sectionId") {
            // uncomment below to test the property
            //modelInstance.sectionId shouldBe ("TODO")
        }

        // to test the property `projectId` - Unique ID of the test point project
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `lastTestResult` - Model of the test point last test result
        should("test lastTestResult") {
            // uncomment below to test the property
            //modelInstance.lastTestResult shouldBe ("TODO")
        }

        // to test the property `iterationId` - Unique ID of work item iteration the test point represents
        should("test iterationId") {
            // uncomment below to test the property
            //modelInstance.iterationId shouldBe ("TODO")
        }

        // to test the property `workItemState` - Work item state
        should("test workItemState") {
            // uncomment below to test the property
            //modelInstance.workItemState shouldBe ("TODO")
        }

        // to test the property `workItemCreatedById` - Unique ID of the work item creator
        should("test workItemCreatedById") {
            // uncomment below to test the property
            //modelInstance.workItemCreatedById shouldBe ("TODO")
        }

        // to test the property `workItemCreatedDate` - Creation date of work item
        should("test workItemCreatedDate") {
            // uncomment below to test the property
            //modelInstance.workItemCreatedDate shouldBe ("TODO")
        }

        // to test the property `modifiedDate` - Last modification date of the test point
        should("test modifiedDate") {
            // uncomment below to test the property
            //modelInstance.modifiedDate shouldBe ("TODO")
        }

        // to test the property `modifiedById` - Unique ID of the test point last editor
        should("test modifiedById") {
            // uncomment below to test the property
            //modelInstance.modifiedById shouldBe ("TODO")
        }

        // to test the property `testerId` - Unique ID of the test point assigned user
        should("test testerId") {
            // uncomment below to test the property
            //modelInstance.testerId shouldBe ("TODO")
        }

        // to test the property `parameters` - Collection of the test point parameters
        should("test parameters") {
            // uncomment below to test the property
            //modelInstance.parameters shouldBe ("TODO")
        }

        // to test the property `workItemMedianDuration` - Median duration of work item the test point represents
        should("test workItemMedianDuration") {
            // uncomment below to test the property
            //modelInstance.workItemMedianDuration shouldBe ("TODO")
        }

        // to test the property `sectionName` - Name of section where work item the test point represents is located
        should("test sectionName") {
            // uncomment below to test the property
            //modelInstance.sectionName shouldBe ("TODO")
        }

        // to test the property `workItemModifiedById` - Unique ID of the work item last editor
        should("test workItemModifiedById") {
            // uncomment below to test the property
            //modelInstance.workItemModifiedById shouldBe ("TODO")
        }

        // to test the property `workItemModifiedDate` - Modified date of work item
        should("test workItemModifiedDate") {
            // uncomment below to test the property
            //modelInstance.workItemModifiedDate shouldBe ("TODO")
        }

    }
}
