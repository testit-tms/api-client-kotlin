/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.WorkItemChangedFieldsViewModel
import org.openapitools.client.models.AttachmentChangeViewModelArrayChangedFieldViewModel
import org.openapitools.client.models.AutoTestChangeViewModelArrayChangedFieldViewModel
import org.openapitools.client.models.BooleanChangedFieldViewModel
import org.openapitools.client.models.GuidChangedFieldViewModel
import org.openapitools.client.models.Int32ChangedFieldViewModel
import org.openapitools.client.models.Int64ChangedFieldViewModel
import org.openapitools.client.models.StringArrayChangedFieldViewModel
import org.openapitools.client.models.StringChangedFieldViewModel
import org.openapitools.client.models.StringChangedFieldWithDiffsViewModel
import org.openapitools.client.models.WorkItemChangedAttributeViewModel
import org.openapitools.client.models.WorkItemLinkChangeViewModelArrayChangedFieldViewModel
import org.openapitools.client.models.WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel

class WorkItemChangedFieldsViewModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of WorkItemChangedFieldsViewModel
        //val modelInstance = WorkItemChangedFieldsViewModel()

        // to test the property `isDeleted`
        should("test isDeleted") {
            // uncomment below to test the property
            //modelInstance.isDeleted shouldBe ("TODO")
        }

        // to test the property `projectId`
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `isAutomated`
        should("test isAutomated") {
            // uncomment below to test the property
            //modelInstance.isAutomated shouldBe ("TODO")
        }

        // to test the property `sectionId`
        should("test sectionId") {
            // uncomment below to test the property
            //modelInstance.sectionId shouldBe ("TODO")
        }

        // to test the property `state`
        should("test state") {
            // uncomment below to test the property
            //modelInstance.state shouldBe ("TODO")
        }

        // to test the property `priority`
        should("test priority") {
            // uncomment below to test the property
            //modelInstance.priority shouldBe ("TODO")
        }

        // to test the property `duration`
        should("test duration") {
            // uncomment below to test the property
            //modelInstance.duration shouldBe ("TODO")
        }

        // to test the property `attributes`
        should("test attributes") {
            // uncomment below to test the property
            //modelInstance.attributes shouldBe ("TODO")
        }

        // to test the property `steps`
        should("test steps") {
            // uncomment below to test the property
            //modelInstance.steps shouldBe ("TODO")
        }

        // to test the property `preconditionSteps`
        should("test preconditionSteps") {
            // uncomment below to test the property
            //modelInstance.preconditionSteps shouldBe ("TODO")
        }

        // to test the property `postconditionSteps`
        should("test postconditionSteps") {
            // uncomment below to test the property
            //modelInstance.postconditionSteps shouldBe ("TODO")
        }

        // to test the property `autoTests`
        should("test autoTests") {
            // uncomment below to test the property
            //modelInstance.autoTests shouldBe ("TODO")
        }

        // to test the property `attachments`
        should("test attachments") {
            // uncomment below to test the property
            //modelInstance.attachments shouldBe ("TODO")
        }

        // to test the property `tags`
        should("test tags") {
            // uncomment below to test the property
            //modelInstance.tags shouldBe ("TODO")
        }

        // to test the property `links`
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

        // to test the property `globalId`
        should("test globalId") {
            // uncomment below to test the property
            //modelInstance.globalId shouldBe ("TODO")
        }

        // to test the property `versionNumber`
        should("test versionNumber") {
            // uncomment below to test the property
            //modelInstance.versionNumber shouldBe ("TODO")
        }

        // to test the property `entityTypeName`
        should("test entityTypeName") {
            // uncomment below to test the property
            //modelInstance.entityTypeName shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

    }
}
