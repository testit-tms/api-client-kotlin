/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.TestRunModel
import org.openapitools.client.models.AutoTestModel
import org.openapitools.client.models.TestPlanModel
import org.openapitools.client.models.TestResultModel
import org.openapitools.client.models.TestRunAnalyticResultModel
import org.openapitools.client.models.TestRunState

class TestRunModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestRunModel
        //val modelInstance = TestRunModel()

        // to test the property `autoTestsCount`
        should("test autoTestsCount") {
            // uncomment below to test the property
            //modelInstance.autoTestsCount shouldBe ("TODO")
        }

        // to test the property `isAutomated`
        should("test isAutomated") {
            // uncomment below to test the property
            //modelInstance.isAutomated shouldBe ("TODO")
        }

        // to test the property `analytic`
        should("test analytic") {
            // uncomment below to test the property
            //modelInstance.analytic shouldBe ("TODO")
        }

        // to test the property `createdDate`
        should("test createdDate") {
            // uncomment below to test the property
            //modelInstance.createdDate shouldBe ("TODO")
        }

        // to test the property `createdById`
        should("test createdById") {
            // uncomment below to test the property
            //modelInstance.createdById shouldBe ("TODO")
        }

        // to test the property `build`
        should("test build") {
            // uncomment below to test the property
            //modelInstance.build shouldBe ("TODO")
        }

        // to test the property `description`
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `stateName`
        should("test stateName") {
            // uncomment below to test the property
            //modelInstance.stateName shouldBe ("TODO")
        }

        // to test the property `projectId`
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `name`
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `launchSource`
        should("test launchSource") {
            // uncomment below to test the property
            //modelInstance.launchSource shouldBe ("TODO")
        }

        // to test the property `id` - Unique ID of the entity
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `isDeleted` - Indicates if the entity is deleted
        should("test isDeleted") {
            // uncomment below to test the property
            //modelInstance.isDeleted shouldBe ("TODO")
        }

        // to test the property `autoTests`
        should("test autoTests") {
            // uncomment below to test the property
            //modelInstance.autoTests shouldBe ("TODO")
        }

        // to test the property `testSuiteIds`
        should("test testSuiteIds") {
            // uncomment below to test the property
            //modelInstance.testSuiteIds shouldBe ("TODO")
        }

        // to test the property `testResults`
        should("test testResults") {
            // uncomment below to test the property
            //modelInstance.testResults shouldBe ("TODO")
        }

        // to test the property `testPlan`
        should("test testPlan") {
            // uncomment below to test the property
            //modelInstance.testPlan shouldBe ("TODO")
        }

        // to test the property `modifiedDate`
        should("test modifiedDate") {
            // uncomment below to test the property
            //modelInstance.modifiedDate shouldBe ("TODO")
        }

        // to test the property `modifiedById`
        should("test modifiedById") {
            // uncomment below to test the property
            //modelInstance.modifiedById shouldBe ("TODO")
        }

        // to test the property `createdByUserName`
        should("test createdByUserName") {
            // uncomment below to test the property
            //modelInstance.createdByUserName shouldBe ("TODO")
        }

        // to test the property `startedDate`
        should("test startedDate") {
            // uncomment below to test the property
            //modelInstance.startedDate shouldBe ("TODO")
        }

        // to test the property `completedDate`
        should("test completedDate") {
            // uncomment below to test the property
            //modelInstance.completedDate shouldBe ("TODO")
        }

        // to test the property `testPlanId`
        should("test testPlanId") {
            // uncomment below to test the property
            //modelInstance.testPlanId shouldBe ("TODO")
        }

        // to test the property `runByUserId`
        should("test runByUserId") {
            // uncomment below to test the property
            //modelInstance.runByUserId shouldBe ("TODO")
        }

        // to test the property `stoppedByUserId`
        should("test stoppedByUserId") {
            // uncomment below to test the property
            //modelInstance.stoppedByUserId shouldBe ("TODO")
        }

    }
}
