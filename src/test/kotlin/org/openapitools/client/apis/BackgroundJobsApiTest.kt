/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.BackgroundJobsApi
import org.openapitools.client.models.BackgroundJobFilterModel
import org.openapitools.client.models.BackgroundJobGetModel
import org.openapitools.client.models.BackgroundJobState
import org.openapitools.client.models.ProblemDetails
import org.openapitools.client.models.ValidationProblemDetails

class BackgroundJobsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of BackgroundJobsApi
        //val apiInstance = BackgroundJobsApi()

        // to test apiV2BackgroundJobsCompletedDelete
        should("test apiV2BackgroundJobsCompletedDelete") {
            // uncomment below to test apiV2BackgroundJobsCompletedDelete
            //apiInstance.apiV2BackgroundJobsCompletedDelete()
        }

        // to test apiV2BackgroundJobsGet
        should("test apiV2BackgroundJobsGet") {
            // uncomment below to test apiV2BackgroundJobsGet
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val result : kotlin.collections.List<BackgroundJobGetModel> = apiInstance.apiV2BackgroundJobsGet(skip, take, orderBy, searchField, searchValue)
            //result shouldBe ("TODO")
        }

        // to test apiV2BackgroundJobsIdCancelPost
        should("test apiV2BackgroundJobsIdCancelPost") {
            // uncomment below to test apiV2BackgroundJobsIdCancelPost
            //val id : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | 
            //apiInstance.apiV2BackgroundJobsIdCancelPost(id)
        }

        // to test apiV2BackgroundJobsIdGet
        should("test apiV2BackgroundJobsIdGet") {
            // uncomment below to test apiV2BackgroundJobsIdGet
            //val id : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Unique ID of the background job
            //val result : BackgroundJobGetModel = apiInstance.apiV2BackgroundJobsIdGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiV2BackgroundJobsIdStatusGet
        should("test apiV2BackgroundJobsIdStatusGet") {
            // uncomment below to test apiV2BackgroundJobsIdStatusGet
            //val id : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Unique ID of the background job
            //val result : BackgroundJobState = apiInstance.apiV2BackgroundJobsIdStatusGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiV2BackgroundJobsSearchPost
        should("test apiV2BackgroundJobsSearchPost") {
            // uncomment below to test apiV2BackgroundJobsSearchPost
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val backgroundJobFilterModel : BackgroundJobFilterModel =  // BackgroundJobFilterModel | 
            //val result : kotlin.collections.List<BackgroundJobGetModel> = apiInstance.apiV2BackgroundJobsSearchPost(skip, take, orderBy, searchField, searchValue, backgroundJobFilterModel)
            //result shouldBe ("TODO")
        }

    }
}
