/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.TestPlansApi
import org.openapitools.client.models.ConfigurationModel
import org.openapitools.client.models.GetXlsxTestPointsByTestPlanModel
import org.openapitools.client.models.Operation
import org.openapitools.client.models.ProblemDetails
import org.openapitools.client.models.TestPlanChangeModel
import org.openapitools.client.models.TestPlanLink
import org.openapitools.client.models.TestPlanModel
import org.openapitools.client.models.TestPlanPostModel
import org.openapitools.client.models.TestPlanPutModel
import org.openapitools.client.models.TestPlanShortModel
import org.openapitools.client.models.TestPlanWithTestSuiteTreeModel
import org.openapitools.client.models.TestPointAnalyticResult
import org.openapitools.client.models.TestPointSelectModel
import org.openapitools.client.models.TestPointWithLastResultModel
import org.openapitools.client.models.TestRunModel
import org.openapitools.client.models.TestRunSearchQueryModel
import org.openapitools.client.models.TestSuiteV2TreeModel
import org.openapitools.client.models.ValidationProblemDetails
import org.openapitools.client.models.WorkItemSelectModel

class TestPlansApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestPlansApi
        //val apiInstance = TestPlansApi()

        // to test addTestPointsWithSections
        should("test addTestPointsWithSections") {
            // uncomment below to test addTestPointsWithSections
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val workItemSelectModel : WorkItemSelectModel =  // WorkItemSelectModel | Filter object to retrieve work items for test-suite's project
            //apiInstance.addTestPointsWithSections(id, workItemSelectModel)
        }

        // to test addWorkItemsWithSections
        should("test addWorkItemsWithSections") {
            // uncomment below to test addWorkItemsWithSections
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val javaUtilUUID : kotlin.collections.Set<java.util.UUID> =  // kotlin.collections.Set<java.util.UUID> | 
            //apiInstance.addWorkItemsWithSections(id, javaUtilUUID)
        }

        // to test apiV2TestPlansIdAnalyticsGet
        should("test apiV2TestPlansIdAnalyticsGet") {
            // uncomment below to test apiV2TestPlansIdAnalyticsGet
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val result : TestPointAnalyticResult = apiInstance.apiV2TestPlansIdAnalyticsGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdAutobalancePost
        should("test apiV2TestPlansIdAutobalancePost") {
            // uncomment below to test apiV2TestPlansIdAutobalancePost
            //val id : kotlin.String = id_example // kotlin.String | Test plan unique or global ID
            //val testers : kotlin.collections.Set<java.util.UUID> =  // kotlin.collections.Set<java.util.UUID> | Specifies a project user IDs to distribute
            //val result : TestPlanWithTestSuiteTreeModel = apiInstance.apiV2TestPlansIdAutobalancePost(id, testers)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdConfigurationsGet
        should("test apiV2TestPlansIdConfigurationsGet") {
            // uncomment below to test apiV2TestPlansIdConfigurationsGet
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val result : kotlin.collections.List<ConfigurationModel> = apiInstance.apiV2TestPlansIdConfigurationsGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdExportTestPointsXlsxPost
        should("test apiV2TestPlansIdExportTestPointsXlsxPost") {
            // uncomment below to test apiV2TestPlansIdExportTestPointsXlsxPost
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val timeZoneOffsetInMinutes : kotlin.Long = 789 // kotlin.Long | 
            //val getXlsxTestPointsByTestPlanModel : GetXlsxTestPointsByTestPlanModel =  // GetXlsxTestPointsByTestPlanModel | 
            //apiInstance.apiV2TestPlansIdExportTestPointsXlsxPost(id, timeZoneOffsetInMinutes, getXlsxTestPointsByTestPlanModel)
        }

        // to test apiV2TestPlansIdExportTestResultHistoryXlsxPost
        should("test apiV2TestPlansIdExportTestResultHistoryXlsxPost") {
            // uncomment below to test apiV2TestPlansIdExportTestResultHistoryXlsxPost
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val mustReturnOnlyLastTestResult : kotlin.Boolean = true // kotlin.Boolean | 
            //val includeSteps : kotlin.Boolean = true // kotlin.Boolean | 
            //val includeDeletedTestSuites : kotlin.Boolean = true // kotlin.Boolean | 
            //val timeZoneOffsetInMinutes : kotlin.Long = 789 // kotlin.Long | 
            //apiInstance.apiV2TestPlansIdExportTestResultHistoryXlsxPost(id, mustReturnOnlyLastTestResult, includeSteps, includeDeletedTestSuites, timeZoneOffsetInMinutes)
        }

        // to test apiV2TestPlansIdHistoryGet
        should("test apiV2TestPlansIdHistoryGet") {
            // uncomment below to test apiV2TestPlansIdHistoryGet
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val result : kotlin.collections.List<TestPlanChangeModel> = apiInstance.apiV2TestPlansIdHistoryGet(id, skip, take, orderBy, searchField, searchValue)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdLinksGet
        should("test apiV2TestPlansIdLinksGet") {
            // uncomment below to test apiV2TestPlansIdLinksGet
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val skip : kotlin.Int = 56 // kotlin.Int | 
            //val take : kotlin.Int = 56 // kotlin.Int | 
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | 
            //val result : kotlin.collections.List<TestPlanLink> = apiInstance.apiV2TestPlansIdLinksGet(id, skip, take, orderBy)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdPatch
        should("test apiV2TestPlansIdPatch") {
            // uncomment below to test apiV2TestPlansIdPatch
            //val id : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Unique ID of the test plan
            //val operation : kotlin.collections.List<Operation> =  // kotlin.collections.List<Operation> | 
            //apiInstance.apiV2TestPlansIdPatch(id, operation)
        }

        // to test apiV2TestPlansIdTestPointsLastResultsGet
        should("test apiV2TestPlansIdTestPointsLastResultsGet") {
            // uncomment below to test apiV2TestPlansIdTestPointsLastResultsGet
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val testerId : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | 
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val result : kotlin.collections.List<TestPointWithLastResultModel> = apiInstance.apiV2TestPlansIdTestPointsLastResultsGet(id, testerId, skip, take, orderBy, searchField, searchValue)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdTestPointsResetPost
        should("test apiV2TestPlansIdTestPointsResetPost") {
            // uncomment below to test apiV2TestPlansIdTestPointsResetPost
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val javaUtilUUID : kotlin.collections.Set<java.util.UUID> =  // kotlin.collections.Set<java.util.UUID> | 
            //apiInstance.apiV2TestPlansIdTestPointsResetPost(id, javaUtilUUID)
        }

        // to test apiV2TestPlansIdTestPointsTesterDelete
        should("test apiV2TestPlansIdTestPointsTesterDelete") {
            // uncomment below to test apiV2TestPlansIdTestPointsTesterDelete
            //val id : kotlin.String = id_example // kotlin.String | Unique or global ID of the test plan
            //val testPointSelectModel : TestPointSelectModel =  // TestPointSelectModel | 
            //val result : kotlin.collections.List<java.util.UUID> = apiInstance.apiV2TestPlansIdTestPointsTesterDelete(id, testPointSelectModel)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdTestPointsTesterUserIdPost
        should("test apiV2TestPlansIdTestPointsTesterUserIdPost") {
            // uncomment below to test apiV2TestPlansIdTestPointsTesterUserIdPost
            //val id : kotlin.String = id_example // kotlin.String | Unique or global ID of the test plan
            //val userId : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Unique ID of the user
            //val testPointSelectModel : TestPointSelectModel =  // TestPointSelectModel | 
            //val result : kotlin.collections.List<java.util.UUID> = apiInstance.apiV2TestPlansIdTestPointsTesterUserIdPost(id, userId, testPointSelectModel)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdTestRunsGet
        should("test apiV2TestPlansIdTestRunsGet") {
            // uncomment below to test apiV2TestPlansIdTestRunsGet
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val notStarted : kotlin.Boolean = true // kotlin.Boolean | 
            //val inProgress : kotlin.Boolean = true // kotlin.Boolean | 
            //val stopped : kotlin.Boolean = true // kotlin.Boolean | 
            //val completed : kotlin.Boolean = true // kotlin.Boolean | 
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val result : kotlin.collections.List<TestRunModel> = apiInstance.apiV2TestPlansIdTestRunsGet(id, notStarted, inProgress, stopped, completed, skip, take, orderBy, searchField, searchValue)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdTestRunsSearchPost
        should("test apiV2TestPlansIdTestRunsSearchPost") {
            // uncomment below to test apiV2TestPlansIdTestRunsSearchPost
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val testRunSearchQueryModel : TestRunSearchQueryModel =  // TestRunSearchQueryModel | 
            //val result : kotlin.collections.List<TestRunModel> = apiInstance.apiV2TestPlansIdTestRunsSearchPost(id, skip, take, orderBy, searchField, searchValue, testRunSearchQueryModel)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPlansIdTestRunsTestResultsLastModifiedModifiedDateGet
        should("test apiV2TestPlansIdTestRunsTestResultsLastModifiedModifiedDateGet") {
            // uncomment below to test apiV2TestPlansIdTestRunsTestResultsLastModifiedModifiedDateGet
            //val id : kotlin.String = id_example // kotlin.String | Test plan unique or global ID
            //apiInstance.apiV2TestPlansIdTestRunsTestResultsLastModifiedModifiedDateGet(id)
        }

        // to test apiV2TestPlansIdUnlockRequestPost
        should("test apiV2TestPlansIdUnlockRequestPost") {
            // uncomment below to test apiV2TestPlansIdUnlockRequestPost
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //apiInstance.apiV2TestPlansIdUnlockRequestPost(id)
        }

        // to test apiV2TestPlansShortsPost
        should("test apiV2TestPlansShortsPost") {
            // uncomment below to test apiV2TestPlansShortsPost
            //val isDeleted : kotlin.Boolean = true // kotlin.Boolean | 
            //val javaUtilUUID : kotlin.collections.Set<java.util.UUID> =  // kotlin.collections.Set<java.util.UUID> | 
            //val result : kotlin.collections.List<TestPlanShortModel> = apiInstance.apiV2TestPlansShortsPost(isDeleted, javaUtilUUID)
            //result shouldBe ("TODO")
        }

        // to test clone
        should("test clone") {
            // uncomment below to test clone
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val result : TestPlanModel = apiInstance.clone(id)
            //result shouldBe ("TODO")
        }

        // to test complete
        should("test complete") {
            // uncomment below to test complete
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //apiInstance.complete(id)
        }

        // to test createTestPlan
        should("test createTestPlan") {
            // uncomment below to test createTestPlan
            //val testPlanPostModel : TestPlanPostModel =  // TestPlanPostModel | 
            //val result : TestPlanModel = apiInstance.createTestPlan(testPlanPostModel)
            //result shouldBe ("TODO")
        }

        // to test deleteTestPlan
        should("test deleteTestPlan") {
            // uncomment below to test deleteTestPlan
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //apiInstance.deleteTestPlan(id)
        }

        // to test getTestPlanById
        should("test getTestPlanById") {
            // uncomment below to test getTestPlanById
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val result : TestPlanModel = apiInstance.getTestPlanById(id)
            //result shouldBe ("TODO")
        }

        // to test getTestSuitesById
        should("test getTestSuitesById") {
            // uncomment below to test getTestSuitesById
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //val result : kotlin.collections.List<TestSuiteV2TreeModel> = apiInstance.getTestSuitesById(id)
            //result shouldBe ("TODO")
        }

        // to test pause
        should("test pause") {
            // uncomment below to test pause
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //apiInstance.pause(id)
        }

        // to test purgeTestPlan
        should("test purgeTestPlan") {
            // uncomment below to test purgeTestPlan
            //val id : kotlin.String = id_example // kotlin.String | Unique or global ID of the test plan
            //apiInstance.purgeTestPlan(id)
        }

        // to test restoreTestPlan
        should("test restoreTestPlan") {
            // uncomment below to test restoreTestPlan
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //apiInstance.restoreTestPlan(id)
        }

        // to test start
        should("test start") {
            // uncomment below to test start
            //val id : kotlin.String = 3fa85f64-5717-4562-b3fc-2c963f66afa6 // kotlin.String | Test plan internal (guid format) or global (int  format) identifier
            //apiInstance.start(id)
        }

        // to test updateTestPlan
        should("test updateTestPlan") {
            // uncomment below to test updateTestPlan
            //val testPlanPutModel : TestPlanPutModel =  // TestPlanPutModel | 
            //apiInstance.updateTestPlan(testPlanPutModel)
        }

    }
}
