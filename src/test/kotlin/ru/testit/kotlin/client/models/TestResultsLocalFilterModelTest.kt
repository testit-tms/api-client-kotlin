/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ru.testit.kotlin.client.models.TestResultsLocalFilterModel
import ru.testit.kotlin.client.models.FailureCategoryModel
import ru.testit.kotlin.client.models.TestResultOutcome

class TestResultsLocalFilterModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestResultsLocalFilterModel
        //val modelInstance = TestResultsLocalFilterModel()

        // to test the property `configurationIds` - Specifies a test result configuration IDs to search for
        should("test configurationIds") {
            // uncomment below to test the property
            //modelInstance.configurationIds shouldBe ("TODO")
        }

        // to test the property `outcomes` - Specifies a test result outcomes to search for
        should("test outcomes") {
            // uncomment below to test the property
            //modelInstance.outcomes shouldBe ("TODO")
        }

        // to test the property `failureCategories` - Specifies a test result failure categories to search for
        should("test failureCategories") {
            // uncomment below to test the property
            //modelInstance.failureCategories shouldBe ("TODO")
        }

        // to test the property `namespace` - Specifies a test result namespace to search for
        should("test namespace") {
            // uncomment below to test the property
            //modelInstance.namespace shouldBe ("TODO")
        }

        // to test the property `className` - Specifies a test result class name to search for
        should("test className") {
            // uncomment below to test the property
            //modelInstance.className shouldBe ("TODO")
        }

    }
}
