/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ru.testit.kotlin.client.models.AutoTestModel
import ru.testit.kotlin.client.models.AutoTestStepModel
import ru.testit.kotlin.client.models.LabelShortModel
import ru.testit.kotlin.client.models.LinkPutModel

class AutoTestModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AutoTestModel
        //val modelInstance = AutoTestModel()

        // to test the property `globalId` - Global ID of the autotest
        should("test globalId") {
            // uncomment below to test the property
            //modelInstance.globalId shouldBe ("TODO")
        }

        // to test the property `isDeleted` - Indicates if the autotest is deleted
        should("test isDeleted") {
            // uncomment below to test the property
            //modelInstance.isDeleted shouldBe ("TODO")
        }

        // to test the property `mustBeApproved` - Indicates if the autotest has unapproved changes from linked work items
        should("test mustBeApproved") {
            // uncomment below to test the property
            //modelInstance.mustBeApproved shouldBe ("TODO")
        }

        // to test the property `id` - Unique ID of the autotest
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `createdDate` - Creation date of the autotest
        should("test createdDate") {
            // uncomment below to test the property
            //modelInstance.createdDate shouldBe ("TODO")
        }

        // to test the property `createdById` - Unique ID of the project creator
        should("test createdById") {
            // uncomment below to test the property
            //modelInstance.createdById shouldBe ("TODO")
        }

        // to test the property `externalId` - External ID of the autotest
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `projectId` - Unique ID of the autotest project
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `name` - Name of the autotest
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `modifiedDate` - Last modification date of the project
        should("test modifiedDate") {
            // uncomment below to test the property
            //modelInstance.modifiedDate shouldBe ("TODO")
        }

        // to test the property `modifiedById` - Unique ID of the project last editor
        should("test modifiedById") {
            // uncomment below to test the property
            //modelInstance.modifiedById shouldBe ("TODO")
        }

        // to test the property `lastTestRunId` - Unique ID of the autotest last test run
        should("test lastTestRunId") {
            // uncomment below to test the property
            //modelInstance.lastTestRunId shouldBe ("TODO")
        }

        // to test the property `lastTestRunName` - Name of the autotest last test run
        should("test lastTestRunName") {
            // uncomment below to test the property
            //modelInstance.lastTestRunName shouldBe ("TODO")
        }

        // to test the property `lastTestResultId` - Unique ID of the autotest last test result
        should("test lastTestResultId") {
            // uncomment below to test the property
            //modelInstance.lastTestResultId shouldBe ("TODO")
        }

        // to test the property `lastTestResultOutcome` - Outcome of the autotest last test result
        should("test lastTestResultOutcome") {
            // uncomment below to test the property
            //modelInstance.lastTestResultOutcome shouldBe ("TODO")
        }

        // to test the property `stabilityPercentage` - Stability percentage of the autotest
        should("test stabilityPercentage") {
            // uncomment below to test the property
            //modelInstance.stabilityPercentage shouldBe ("TODO")
        }

        // to test the property `links` - Collection of the autotest links
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

        // to test the property `namespace` - Name of the autotest namespace
        should("test namespace") {
            // uncomment below to test the property
            //modelInstance.namespace shouldBe ("TODO")
        }

        // to test the property `classname` - Name of the autotest class
        should("test classname") {
            // uncomment below to test the property
            //modelInstance.classname shouldBe ("TODO")
        }

        // to test the property `steps` - Collection of the autotest steps
        should("test steps") {
            // uncomment below to test the property
            //modelInstance.steps shouldBe ("TODO")
        }

        // to test the property `setup` - Collection of the autotest setup steps
        should("test setup") {
            // uncomment below to test the property
            //modelInstance.setup shouldBe ("TODO")
        }

        // to test the property `teardown` - Collection of the autotest teardown steps
        should("test teardown") {
            // uncomment below to test the property
            //modelInstance.teardown shouldBe ("TODO")
        }

        // to test the property `title` - Name of the autotest in autotest's card
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `description` - Description of the autotest in autotest's card
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `labels` - Collection of the autotest labels
        should("test labels") {
            // uncomment below to test the property
            //modelInstance.labels shouldBe ("TODO")
        }

        // to test the property `isFlaky` - Indicates if the autotest is marked as flaky
        should("test isFlaky") {
            // uncomment below to test the property
            //modelInstance.isFlaky shouldBe ("TODO")
        }

        // to test the property `externalKey` - External key of the autotest
        should("test externalKey") {
            // uncomment below to test the property
            //modelInstance.externalKey shouldBe ("TODO")
        }

    }
}
