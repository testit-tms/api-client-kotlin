/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ru.testit.kotlin.client.models.TestResultsFilterModel
import ru.testit.kotlin.client.models.DateTimeRangeSelectorModel
import ru.testit.kotlin.client.models.FailureCategoryModel
import ru.testit.kotlin.client.models.Int64RangeSelectorModel
import ru.testit.kotlin.client.models.TestResultOutcome

class TestResultsFilterModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestResultsFilterModel
        //val modelInstance = TestResultsFilterModel()

        // to test the property `testRunIds` - Specifies a test result test run IDs to search for
        should("test testRunIds") {
            // uncomment below to test the property
            //modelInstance.testRunIds shouldBe ("TODO")
        }

        // to test the property `autoTestGlobalIds` - Specifies an autotest global IDs to search results for
        should("test autoTestGlobalIds") {
            // uncomment below to test the property
            //modelInstance.autoTestGlobalIds shouldBe ("TODO")
        }

        // to test the property `name` - Specifies an autotest name to search results for
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `createdDate` - Specifies a test result creation date and time range to search for
        should("test createdDate") {
            // uncomment below to test the property
            //modelInstance.createdDate shouldBe ("TODO")
        }

        // to test the property `modifiedDate` - Specifies a test result modified date and time range to search for
        should("test modifiedDate") {
            // uncomment below to test the property
            //modelInstance.modifiedDate shouldBe ("TODO")
        }

        // to test the property `startedOn` - Specifies a test result started on date and time range to search for
        should("test startedOn") {
            // uncomment below to test the property
            //modelInstance.startedOn shouldBe ("TODO")
        }

        // to test the property `completedOn` - Specifies a test result completed on date and time range to search for
        should("test completedOn") {
            // uncomment below to test the property
            //modelInstance.completedOn shouldBe ("TODO")
        }

        // to test the property `duration` - Specifies a test result duration range to search for
        should("test duration") {
            // uncomment below to test the property
            //modelInstance.duration shouldBe ("TODO")
        }

        // to test the property `resultReasons` - Specifies result reasons for searching test results
        should("test resultReasons") {
            // uncomment below to test the property
            //modelInstance.resultReasons shouldBe ("TODO")
        }

        // to test the property `configurationIds` - Specifies a test result configuration IDs to search for
        should("test configurationIds") {
            // uncomment below to test the property
            //modelInstance.configurationIds shouldBe ("TODO")
        }

        // to test the property `outcomes` - Specifies a test result outcomes to search for
        should("test outcomes") {
            // uncomment below to test the property
            //modelInstance.outcomes shouldBe ("TODO")
        }

        // to test the property `failureCategories` - Specifies a test result failure categories to search for
        should("test failureCategories") {
            // uncomment below to test the property
            //modelInstance.failureCategories shouldBe ("TODO")
        }

        // to test the property `namespace` - Specifies a test result namespace to search for
        should("test namespace") {
            // uncomment below to test the property
            //modelInstance.namespace shouldBe ("TODO")
        }

        // to test the property `className` - Specifies a test result class name to search for
        should("test className") {
            // uncomment below to test the property
            //modelInstance.className shouldBe ("TODO")
        }

    }
}
