/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ru.testit.kotlin.client.models.AutoTestPostModel
import ru.testit.kotlin.client.models.AutoTestStepModel
import ru.testit.kotlin.client.models.LabelPostModel
import ru.testit.kotlin.client.models.LinkPostModel

class AutoTestPostModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of AutoTestPostModel
        //val modelInstance = AutoTestPostModel()

        // to test the property `externalId` - External ID of the autotest
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `projectId` - Unique ID of the autotest project
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `name` - Name of the autotest
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `workItemIdsForLinkWithAutoTest` - Specifies the IDs of work items to link your autotest to. You can specify several IDs.
        should("test workItemIdsForLinkWithAutoTest") {
            // uncomment below to test the property
            //modelInstance.workItemIdsForLinkWithAutoTest shouldBe ("TODO")
        }

        // to test the property `shouldCreateWorkItem` - Creates a test case linked to the autotest.
        should("test shouldCreateWorkItem") {
            // uncomment below to test the property
            //modelInstance.shouldCreateWorkItem shouldBe ("TODO")
        }

        // to test the property `attributes` - Key value pair of custom work item attributes
        should("test attributes") {
            // uncomment below to test the property
            //modelInstance.attributes shouldBe ("TODO")
        }

        // to test the property `links` - Collection of the autotest links
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

        // to test the property `namespace` - Name of the autotest namespace
        should("test namespace") {
            // uncomment below to test the property
            //modelInstance.namespace shouldBe ("TODO")
        }

        // to test the property `classname` - Name of the autotest class
        should("test classname") {
            // uncomment below to test the property
            //modelInstance.classname shouldBe ("TODO")
        }

        // to test the property `steps` - Collection of the autotest steps
        should("test steps") {
            // uncomment below to test the property
            //modelInstance.steps shouldBe ("TODO")
        }

        // to test the property `setup` - Collection of the autotest setup steps
        should("test setup") {
            // uncomment below to test the property
            //modelInstance.setup shouldBe ("TODO")
        }

        // to test the property `teardown` - Collection of the autotest teardown steps
        should("test teardown") {
            // uncomment below to test the property
            //modelInstance.teardown shouldBe ("TODO")
        }

        // to test the property `title` - Name of the autotest in autotest's card
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `description` - Description of the autotest in autotest's card
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `labels` - Collection of the autotest labels
        should("test labels") {
            // uncomment below to test the property
            //modelInstance.labels shouldBe ("TODO")
        }

        // to test the property `isFlaky` - Indicates if the autotest is marked as flaky
        should("test isFlaky") {
            // uncomment below to test the property
            //modelInstance.isFlaky shouldBe ("TODO")
        }

        // to test the property `externalKey` - External key of the autotest
        should("test externalKey") {
            // uncomment below to test the property
            //modelInstance.externalKey shouldBe ("TODO")
        }

    }
}
