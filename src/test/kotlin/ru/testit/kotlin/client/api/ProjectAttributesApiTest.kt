/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.api

import io.kotlintest.specs.ShouldSpec

class ProjectAttributesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ProjectAttributesApi
        //val apiInstance = ProjectAttributesApi()

        // to test createProjectsAttribute
        should("test createProjectsAttribute") {
            // uncomment below to test createProjectsAttribute
            //val projectId : kotlin.String = projectId_example // kotlin.String | Project internal (UUID) or global (integer) identifier
            //val customAttributePostModel : CustomAttributePostModel =  // CustomAttributePostModel | 
            //val result : CustomAttributeModel = apiInstance.createProjectsAttribute(projectId, customAttributePostModel)
            //result shouldBe ("TODO")
        }

        // to test deleteProjectsAttribute
        should("test deleteProjectsAttribute") {
            // uncomment below to test deleteProjectsAttribute
            //val projectId : kotlin.String = projectId_example // kotlin.String | Project internal (UUID) or global (integer) identifier
            //val attributeId : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Project attribute internal (UUID)
            //apiInstance.deleteProjectsAttribute(projectId, attributeId)
        }

        // to test getAttributeByProjectId
        should("test getAttributeByProjectId") {
            // uncomment below to test getAttributeByProjectId
            //val projectId : kotlin.String = projectId_example // kotlin.String | Project internal (UUID) or global (integer) identifier
            //val attributeId : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Project attribute internal (UUID) or global (integer) identifier
            //val result : CustomAttributeModel = apiInstance.getAttributeByProjectId(projectId, attributeId)
            //result shouldBe ("TODO")
        }

        // to test getAttributesByProjectId
        should("test getAttributesByProjectId") {
            // uncomment below to test getAttributesByProjectId
            //val projectId : kotlin.String = projectId_example // kotlin.String | Project internal (UUID) or global (integer) identifier
            //val isDeleted : DeletionState =  // DeletionState | 
            //val result : kotlin.collections.List<CustomAttributeModel> = apiInstance.getAttributesByProjectId(projectId, isDeleted)
            //result shouldBe ("TODO")
        }

        // to test searchAttributesInProject
        should("test searchAttributesInProject") {
            // uncomment below to test searchAttributesInProject
            //val projectId : kotlin.String = projectId_example // kotlin.String | Unique or global project ID
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val projectAttributesFilterModel : ProjectAttributesFilterModel =  // ProjectAttributesFilterModel | 
            //val result : kotlin.collections.List<CustomAttributeGetModel> = apiInstance.searchAttributesInProject(projectId, skip, take, orderBy, searchField, searchValue, projectAttributesFilterModel)
            //result shouldBe ("TODO")
        }

        // to test updateProjectsAttribute
        should("test updateProjectsAttribute") {
            // uncomment below to test updateProjectsAttribute
            //val projectId : kotlin.String = projectId_example // kotlin.String | Unique or global project ID
            //val customAttributePutModel : CustomAttributePutModel =  // CustomAttributePutModel | 
            //apiInstance.updateProjectsAttribute(projectId, customAttributePutModel)
        }

    }
}
