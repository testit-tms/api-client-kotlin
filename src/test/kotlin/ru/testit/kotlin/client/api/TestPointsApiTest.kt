/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.api

import io.kotlintest.specs.ShouldSpec

class TestPointsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestPointsApi
        //val apiInstance = TestPointsApi()

        // to test apiV2TestPointsIdTestRunsGet
        should("test apiV2TestPointsIdTestRunsGet") {
            // uncomment below to test apiV2TestPointsIdTestRunsGet
            //val id : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Test point unique ID
            //val result : kotlin.collections.List<TestRunModel> = apiInstance.apiV2TestPointsIdTestRunsGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPointsIdWorkItemGet
        should("test apiV2TestPointsIdWorkItemGet") {
            // uncomment below to test apiV2TestPointsIdWorkItemGet
            //val id : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Test point unique ID
            //val result : WorkItemModel = apiInstance.apiV2TestPointsIdWorkItemGet(id)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPointsSearchIdPost
        should("test apiV2TestPointsSearchIdPost") {
            // uncomment below to test apiV2TestPointsSearchIdPost
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val testPointFilterModel : TestPointFilterModel =  // TestPointFilterModel | 
            //val result : kotlin.collections.List<java.util.UUID> = apiInstance.apiV2TestPointsSearchIdPost(skip, take, orderBy, searchField, searchValue, testPointFilterModel)
            //result shouldBe ("TODO")
        }

        // to test apiV2TestPointsSearchPost
        should("test apiV2TestPointsSearchPost") {
            // uncomment below to test apiV2TestPointsSearchPost
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val testPointFilterModel : TestPointFilterModel =  // TestPointFilterModel | 
            //val result : kotlin.collections.List<TestPointShortGetModel> = apiInstance.apiV2TestPointsSearchPost(skip, take, orderBy, searchField, searchValue, testPointFilterModel)
            //result shouldBe ("TODO")
        }

    }
}
