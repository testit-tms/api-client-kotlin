/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package ru.testit.kotlin.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import ru.testit.kotlin.client.apis.ProjectTestPlansApi
import ru.testit.kotlin.client.models.ProblemDetails
import ru.testit.kotlin.client.models.ProjectTestPlansFilterModel
import ru.testit.kotlin.client.models.TestPlanSelectModel
import ru.testit.kotlin.client.models.TestPlanWithAnalyticModel
import ru.testit.kotlin.client.models.ValidationProblemDetails

class ProjectTestPlansApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ProjectTestPlansApi
        //val apiInstance = ProjectTestPlansApi()

        // to test apiV2ProjectsProjectIdTestPlansAnalyticsGet
        should("test apiV2ProjectsProjectIdTestPlansAnalyticsGet") {
            // uncomment below to test apiV2ProjectsProjectIdTestPlansAnalyticsGet
            //val projectId : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Project internal (UUID) identifier
            //val isDeleted : kotlin.Boolean = true // kotlin.Boolean | 
            //val mustUpdateCache : kotlin.Boolean = true // kotlin.Boolean | 
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val result : kotlin.collections.List<TestPlanWithAnalyticModel> = apiInstance.apiV2ProjectsProjectIdTestPlansAnalyticsGet(projectId, isDeleted, mustUpdateCache, skip, take, orderBy, searchField, searchValue)
            //result shouldBe ("TODO")
        }

        // to test apiV2ProjectsProjectIdTestPlansDeleteBulkPost
        should("test apiV2ProjectsProjectIdTestPlansDeleteBulkPost") {
            // uncomment below to test apiV2ProjectsProjectIdTestPlansDeleteBulkPost
            //val projectId : kotlin.String = projectId_example // kotlin.String | Unique or global ID of the project
            //val testPlanSelectModel : TestPlanSelectModel =  // TestPlanSelectModel | 
            //val result : kotlin.collections.List<java.util.UUID> = apiInstance.apiV2ProjectsProjectIdTestPlansDeleteBulkPost(projectId, testPlanSelectModel)
            //result shouldBe ("TODO")
        }

        // to test apiV2ProjectsProjectIdTestPlansNameExistsGet
        should("test apiV2ProjectsProjectIdTestPlansNameExistsGet") {
            // uncomment below to test apiV2ProjectsProjectIdTestPlansNameExistsGet
            //val projectId : java.util.UUID = 38400000-8cf0-11bd-b23e-10b96e4ef00d // java.util.UUID | Project internal (UUID) or global (integer) identifier
            //val name : kotlin.String = name_example // kotlin.String | TestPlan name to check
            //val result : kotlin.Boolean = apiInstance.apiV2ProjectsProjectIdTestPlansNameExistsGet(projectId, name)
            //result shouldBe ("TODO")
        }

        // to test apiV2ProjectsProjectIdTestPlansPurgeBulkPost
        should("test apiV2ProjectsProjectIdTestPlansPurgeBulkPost") {
            // uncomment below to test apiV2ProjectsProjectIdTestPlansPurgeBulkPost
            //val projectId : kotlin.String = projectId_example // kotlin.String | Unique or global ID of the project
            //val testPlanSelectModel : TestPlanSelectModel =  // TestPlanSelectModel | 
            //apiInstance.apiV2ProjectsProjectIdTestPlansPurgeBulkPost(projectId, testPlanSelectModel)
        }

        // to test apiV2ProjectsProjectIdTestPlansRestoreBulkPost
        should("test apiV2ProjectsProjectIdTestPlansRestoreBulkPost") {
            // uncomment below to test apiV2ProjectsProjectIdTestPlansRestoreBulkPost
            //val projectId : kotlin.String = projectId_example // kotlin.String | Unique or global ID of the project
            //val testPlanSelectModel : TestPlanSelectModel =  // TestPlanSelectModel | 
            //val result : kotlin.collections.List<java.util.UUID> = apiInstance.apiV2ProjectsProjectIdTestPlansRestoreBulkPost(projectId, testPlanSelectModel)
            //result shouldBe ("TODO")
        }

        // to test apiV2ProjectsProjectIdTestPlansSearchPost
        should("test apiV2ProjectsProjectIdTestPlansSearchPost") {
            // uncomment below to test apiV2ProjectsProjectIdTestPlansSearchPost
            //val projectId : kotlin.String = projectId_example // kotlin.String | Project internal (UUID) or global (integer) identifier
            //val mustUpdateCache : kotlin.Boolean = true // kotlin.Boolean | 
            //val skip : kotlin.Int = 56 // kotlin.Int | Amount of items to be skipped (offset)
            //val take : kotlin.Int = 56 // kotlin.Int | Amount of items to be taken (limit)
            //val orderBy : kotlin.String = orderBy_example // kotlin.String | SQL-like  ORDER BY statement (column1 ASC|DESC , column2 ASC|DESC)
            //val searchField : kotlin.String = searchField_example // kotlin.String | Property name for searching
            //val searchValue : kotlin.String = searchValue_example // kotlin.String | Value for searching
            //val projectTestPlansFilterModel : ProjectTestPlansFilterModel =  // ProjectTestPlansFilterModel | 
            //val result : kotlin.collections.List<TestPlanWithAnalyticModel> = apiInstance.apiV2ProjectsProjectIdTestPlansSearchPost(projectId, mustUpdateCache, skip, take, orderBy, searchField, searchValue, projectTestPlansFilterModel)
            //result shouldBe ("TODO")
        }

    }
}
