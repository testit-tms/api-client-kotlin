/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.NotificationModel
import org.openapitools.client.models.NotificationTypeModel

class NotificationModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of NotificationModel
        //val modelInstance = NotificationModel()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `isRead`
        should("test isRead") {
            // uncomment below to test the property
            //modelInstance.isRead shouldBe ("TODO")
        }

        // to test the property `entityId`
        should("test entityId") {
            // uncomment below to test the property
            //modelInstance.entityId shouldBe ("TODO")
        }

        // to test the property `notificationType`
        should("test notificationType") {
            // uncomment below to test the property
            //modelInstance.notificationType shouldBe ("TODO")
        }

        // to test the property `testPlanGlobalId`
        should("test testPlanGlobalId") {
            // uncomment below to test the property
            //modelInstance.testPlanGlobalId shouldBe ("TODO")
        }

        // to test the property `testPlanName`
        should("test testPlanName") {
            // uncomment below to test the property
            //modelInstance.testPlanName shouldBe ("TODO")
        }

        // to test the property `comment`
        should("test comment") {
            // uncomment below to test the property
            //modelInstance.comment shouldBe ("TODO")
        }

        // to test the property `workItemName`
        should("test workItemName") {
            // uncomment below to test the property
            //modelInstance.workItemName shouldBe ("TODO")
        }

        // to test the property `createdById`
        should("test createdById") {
            // uncomment below to test the property
            //modelInstance.createdById shouldBe ("TODO")
        }

        // to test the property `createdDate`
        should("test createdDate") {
            // uncomment below to test the property
            //modelInstance.createdDate shouldBe ("TODO")
        }

        // to test the property `projectGlobalId`
        should("test projectGlobalId") {
            // uncomment below to test the property
            //modelInstance.projectGlobalId shouldBe ("TODO")
        }

        // to test the property `projectName`
        should("test projectName") {
            // uncomment below to test the property
            //modelInstance.projectName shouldBe ("TODO")
        }

        // to test the property `workitemGlobalId`
        should("test workitemGlobalId") {
            // uncomment below to test the property
            //modelInstance.workitemGlobalId shouldBe ("TODO")
        }

        // to test the property `attributeName`
        should("test attributeName") {
            // uncomment below to test the property
            //modelInstance.attributeName shouldBe ("TODO")
        }

    }
}
