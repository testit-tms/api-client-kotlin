/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CustomAttributeSearchQueryModel
import org.openapitools.client.models.CustomAttributeTypesEnum

class CustomAttributeSearchQueryModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CustomAttributeSearchQueryModel
        //val modelInstance = CustomAttributeSearchQueryModel()

        // to test the property `name` - Name of attribute
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `projectIds` - Unique IDs of projects where attribute is in use
        should("test projectIds") {
            // uncomment below to test the property
            //modelInstance.projectIds shouldBe ("TODO")
        }

        // to test the property `customAttributeIds` - Unique IDs of attributes for search restriction
        should("test customAttributeIds") {
            // uncomment below to test the property
            //modelInstance.customAttributeIds shouldBe ("TODO")
        }

        // to test the property `customAttributeTypes` - Collection of attribute types
        should("test customAttributeTypes") {
            // uncomment below to test the property
            //modelInstance.customAttributeTypes shouldBe ("TODO")
        }

        // to test the property `isGlobal` - Indicates whether the attribute is available across all projects
        should("test isGlobal") {
            // uncomment below to test the property
            //modelInstance.isGlobal shouldBe ("TODO")
        }

        // to test the property `isDeleted` - Indicates whether the attribute is deleted
        should("test isDeleted") {
            // uncomment below to test the property
            //modelInstance.isDeleted shouldBe ("TODO")
        }

    }
}
