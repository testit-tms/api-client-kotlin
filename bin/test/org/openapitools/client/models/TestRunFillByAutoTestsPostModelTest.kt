/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.TestRunFillByAutoTestsPostModel
import org.openapitools.client.models.AttachmentPutModel
import org.openapitools.client.models.LinkPostModel

class TestRunFillByAutoTestsPostModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestRunFillByAutoTestsPostModel
        //val modelInstance = TestRunFillByAutoTestsPostModel()

        // to test the property `projectId` - Specifies the GUID of the project, in which a test run will be created.
        should("test projectId") {
            // uncomment below to test the property
            //modelInstance.projectId shouldBe ("TODO")
        }

        // to test the property `configurationIds` - Specifies the configuration GUIDs, from which test points are created. You can specify several GUIDs.
        should("test configurationIds") {
            // uncomment below to test the property
            //modelInstance.configurationIds shouldBe ("TODO")
        }

        // to test the property `autoTestExternalIds` - Specifies the external ID of the autotest. You can specify several IDs.
        should("test autoTestExternalIds") {
            // uncomment below to test the property
            //modelInstance.autoTestExternalIds shouldBe ("TODO")
        }

        // to test the property `name` - Specifies the name of the test run.
        should("test name") {
            // uncomment below to test the property
            //modelInstance.name shouldBe ("TODO")
        }

        // to test the property `description` - Specifies the test run description.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `launchSource` - Specifies the test run launch source.
        should("test launchSource") {
            // uncomment below to test the property
            //modelInstance.launchSource shouldBe ("TODO")
        }

        // to test the property `attachments` - Collection of attachment ids to relate to the test run
        should("test attachments") {
            // uncomment below to test the property
            //modelInstance.attachments shouldBe ("TODO")
        }

        // to test the property `links` - Collection of links to relate to the test run
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

    }
}
