/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.TestResultV2ShortModel
import org.openapitools.client.models.AttachmentModel
import org.openapitools.client.models.LinkModel
import org.openapitools.client.models.TestPointShortModel

class TestResultV2ShortModelTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of TestResultV2ShortModel
        //val modelInstance = TestResultV2ShortModel()

        // to test the property `id`
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `configurationId`
        should("test configurationId") {
            // uncomment below to test the property
            //modelInstance.configurationId shouldBe ("TODO")
        }

        // to test the property `workItemVersionId`
        should("test workItemVersionId") {
            // uncomment below to test the property
            //modelInstance.workItemVersionId shouldBe ("TODO")
        }

        // to test the property `testRunId`
        should("test testRunId") {
            // uncomment below to test the property
            //modelInstance.testRunId shouldBe ("TODO")
        }

        // to test the property `outcome` - Property can contain one of these values: Passed, Failed, InProgress, Blocked, Skipped
        should("test outcome") {
            // uncomment below to test the property
            //modelInstance.outcome shouldBe ("TODO")
        }

        // to test the property `autoTestId`
        should("test autoTestId") {
            // uncomment below to test the property
            //modelInstance.autoTestId shouldBe ("TODO")
        }

        // to test the property `message`
        should("test message") {
            // uncomment below to test the property
            //modelInstance.message shouldBe ("TODO")
        }

        // to test the property `traces`
        should("test traces") {
            // uncomment below to test the property
            //modelInstance.traces shouldBe ("TODO")
        }

        // to test the property `startedOn`
        should("test startedOn") {
            // uncomment below to test the property
            //modelInstance.startedOn shouldBe ("TODO")
        }

        // to test the property `completedOn`
        should("test completedOn") {
            // uncomment below to test the property
            //modelInstance.completedOn shouldBe ("TODO")
        }

        // to test the property `runByUserId`
        should("test runByUserId") {
            // uncomment below to test the property
            //modelInstance.runByUserId shouldBe ("TODO")
        }

        // to test the property `stoppedByUserId`
        should("test stoppedByUserId") {
            // uncomment below to test the property
            //modelInstance.stoppedByUserId shouldBe ("TODO")
        }

        // to test the property `testPointId`
        should("test testPointId") {
            // uncomment below to test the property
            //modelInstance.testPointId shouldBe ("TODO")
        }

        // to test the property `testPoint`
        should("test testPoint") {
            // uncomment below to test the property
            //modelInstance.testPoint shouldBe ("TODO")
        }

        // to test the property `comment`
        should("test comment") {
            // uncomment below to test the property
            //modelInstance.comment shouldBe ("TODO")
        }

        // to test the property `links`
        should("test links") {
            // uncomment below to test the property
            //modelInstance.links shouldBe ("TODO")
        }

        // to test the property `attachments`
        should("test attachments") {
            // uncomment below to test the property
            //modelInstance.attachments shouldBe ("TODO")
        }

        // to test the property `parameters`
        should("test parameters") {
            // uncomment below to test the property
            //modelInstance.parameters shouldBe ("TODO")
        }

        // to test the property `properties`
        should("test properties") {
            // uncomment below to test the property
            //modelInstance.properties shouldBe ("TODO")
        }

    }
}
